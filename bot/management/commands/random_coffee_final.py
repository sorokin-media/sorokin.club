
# import Django packages
from django.core.management import BaseCommand

# import Models
from users.models.user import User
from users.models.random_coffee import RandomCoffee

# imports for getting config data
from club import settings

# Telegram imports
import telegram
from telegram import Update, ParseMode
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext

# import custom class for sending message
from bot.sending_message import TelegramCustomMessage, MessageToDmitry

class Command(BaseCommand):

    def handle(self, *args, **options):

        coffee_users = RandomCoffee.objects.filter(random_coffee_today=True).filter(random_coffee_is=True).all()
        log_for_dmitry = '–≠—Ç–æ —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö, –∫—Ç–æ –≤—ã–±—Ä–∞–ª—Å—è –¥–ª—è —Å–±–æ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏: \n\n'
        log_for_dmitry += str([coffee_user.user.slug for coffee_user in coffee_users])
        MessageToDmitry(data=log_for_dmitry).send_message()
        for coffee_user in coffee_users:
            coffee_user.set_activity('go to try to send message')
            try:
                coffee_buddy_id = coffee_user.random_coffee_last_partner_id
                coffee_user.set_activity('come to condition')
                if coffee_buddy_id:
                    coffee_user.set_activity('condition done')
                    coffee_buddy_full_name = User.objects.filter(id=coffee_buddy_id).first().full_name

                    text = '<strong>–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –±–æ—Ç –†–∞–Ω–¥–æ–º –ö–æ—Ñ–µ!‚òïÔ∏è</strong>\n\n'\
                        f'–°–æ–∑–≤–æ–Ω —Å {coffee_buddy_full_name} –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ?'

                    buttons = [
                        {
                            'text': '–î–∞, –≤—Å—ë üî•',
                            'callback': 'coffee_feedback:–ó–≤–æ–Ω–æ–∫ —Å–æ—Å—Ç–æ—è–ª—Å—è'
                        },
                        {
                            'text': '–ù–µ—Ç, –ø–æ –º–æ–µ–π –≤–∏–Ω–µ üòø',
                            'callback': 'coffee_feedback:–Ø –Ω–µ –ø–æ–∑–≤–æ–Ω–∏–ª'
                        },
                        {
                            'text': '–ù–µ—Ç, —Å —Ç–æ–π —Å—Ç–æ—Ä–æ–Ω—ã —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ üòø',
                            'callback': 'coffee_feedback:–°–æ–±–µ—Å–µ–¥–Ω–∏–∫ –Ω–µ –ø–æ–∑–≤–æ–Ω–∏–ª'
                        }
                    ]
                    coffee_user.set_activity('come to message')
                    custom_message = TelegramCustomMessage(
                        user=coffee_user.user,
                        string_for_bot=text,
                        buttons=buttons,
                        random_coffee=True
                    )
                    custom_message.send_message()
                    coffee_user.set_activity('final message sended')
                    MessageToDmitry(data=f'–ó–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —é–∑–µ—Ä—É {coffee_user.user.slug}.').send_message()

            except:
                coffee_user.set_activity('Final message was not sended! ')
                log_to_dmitry = f'–ó–∞–ø—Ä–æ—Å –Ω–µ –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —é–∑–µ—Ä—É: {coffee_user.user.slug}'
                MessageToDmitry(data=log_to_dmitry).send_message()

'''
typical commands for tests on local

update random_coffee set random_coffee_is=True;
update random_coffee set random_coffee_today=True;
update random_coffee set random_coffee_past_partners=Null;
update random_coffee set random_coffee_last_partner_id=Null;
update random_coffee set random_coffee_today=True;
select * from random_coffee;
'''
